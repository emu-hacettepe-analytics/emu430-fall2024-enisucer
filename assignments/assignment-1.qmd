---
title: "Assignment 1"
---

# Assignment 1

```{r}
1 + 1
```

My first assignment has two parts.

## (a)

## (b)

First, we load the *dslabs* library and retrieve the *polls_us_election_2016* dataset from it.

```{r}
library(dslabs)
data(polls_us_election_2016)
```

Display the first 10 rows of the data

```{r}
head(polls_us_election_2016, 10)
```

```         
        state  startdate    enddate                                                   pollster grade samplesize
1        U.S. 2016-11-03 2016-11-06                                   ABC News/Washington Post    A+       2220
2        U.S. 2016-11-01 2016-11-07                                    Google Consumer Surveys     B      26574
3        U.S. 2016-11-02 2016-11-06                                                      Ipsos    A-       2195
4        U.S. 2016-11-04 2016-11-07                                                     YouGov     B       3677
5        U.S. 2016-11-03 2016-11-06                                           Gravis Marketing    B-      16639
6        U.S. 2016-11-03 2016-11-06 Fox News/Anderson Robbins Research/Shaw & Company Research     A       1295
7        U.S. 2016-11-02 2016-11-06                                    CBS News/New York Times    A-       1426
8        U.S. 2016-11-03 2016-11-05                               NBC News/Wall Street Journal    A-       1282
9  New Mexico 2016-11-06 2016-11-06                                                   Zia Poll  <NA>       8439
10       U.S. 2016-11-04 2016-11-07                                                   IBD/TIPP    A-       1107
   population rawpoll_clinton rawpoll_trump rawpoll_johnson rawpoll_mcmullin adjpoll_clinton adjpoll_trump
1          lv           47.00         43.00            4.00               NA        45.20163      41.72430
2          lv           38.03         35.69            5.46               NA        43.34557      41.21439
3          lv           42.00         39.00            6.00               NA        42.02638      38.81620
4          lv           45.00         41.00            5.00               NA        45.65676      40.92004
5          rv           47.00         43.00            3.00               NA        46.84089      42.33184
6          lv           48.00         44.00            3.00               NA        49.02208      43.95631
7          lv           45.00         41.00            5.00               NA        45.11649      40.92722
8          lv           44.00         40.00            6.00               NA        43.58576      40.77325
9          lv           46.00         44.00            6.00               NA        44.82594      41.59978
10         lv           41.20         42.70            7.10               NA        42.92745      42.23545
   adjpoll_johnson adjpoll_mcmullin
1         4.626221               NA
2         5.175792               NA
3         6.844734               NA
4         6.069454               NA
5         3.726098               NA
6         3.057876               NA
7         4.341786               NA
8         5.365788               NA
9         7.870127               NA
10        6.316175               NA
```

Calculate the total number of missing values NA rephrase

```{r}
total_number_of_NA <- sum(is.na(polls_us_election_2016))
print(total_number_of_NA)
```

```         
[1] 11604
```

Create variables for my birth year and first name, define a function to replace missing values, apply this function to each column of the dataset to fill in missing values, assign the updated data to a new variable, calculate the total number of missing values in the updated dataset, and print the count of missing values in the modified data.

```{r}
my_birth_year <- 2003
my_first_name <- "Elif"

change_na_values <- function(x) {
  if (is.numeric(x)) {
    return(ifelse(is.na(x), my_birth_year, x))  
  } else {
    return(ifelse(is.na(x), my_first_name, x))
  }
}

polls_us_election_2016 <- as.data.frame(lapply(polls_us_election_2016, change_na_values))

changed_data <- polls_us_election_2016

total_number_of_na_for_changed <- sum(is.na(changed_data))
print(total_number_of_na_for_changed)
```

```         
[1] 0
```

Show the first 10 rows of the modified dataset.

```{r}
head(changed_data, 10)
```

```         
   state startdate enddate pollster grade samplesize population rawpoll_clinton rawpoll_trump rawpoll_johnson
1     50     17108   17111        1    10       2220         lv           47.00         43.00            4.00
2     50     17106   17112       63     6      26574         lv           38.03         35.69            5.46
3     50     17107   17111       81     8       2195         lv           42.00         39.00            6.00
4     50     17109   17112      194     6       3677         lv           45.00         41.00            5.00
5     50     17108   17111       65     5      16639         rv           47.00         43.00            3.00
6     50     17108   17111       55     9       1295         lv           48.00         44.00            3.00
7     50     17107   17111       18     8       1426         lv           45.00         41.00            5.00
8     50     17108   17110      113     8       1282         lv           44.00         40.00            6.00
9     37     17111   17111      195  Enis       8439         lv           46.00         44.00            6.00
10    50     17109   17112       76     8       1107         lv           41.20         42.70            7.10
   rawpoll_mcmullin adjpoll_clinton adjpoll_trump adjpoll_johnson adjpoll_mcmullin
1              2002        45.20163      41.72430        4.626221             2002
2              2002        43.34557      41.21439        5.175792             2002
3              2002        42.02638      38.81620        6.844734             2002
4              2002        45.65676      40.92004        6.069454             2002
5              2002        46.84089      42.33184        3.726098             2002
6              2002        49.02208      43.95631        3.057876             2002
7              2002        45.11649      40.92722        4.341786             2002
8              2002        43.58576      40.77325        5.365788             2002
9              2002        44.82594      41.59978        7.870127             2002
10             2002        42.92745      42.23545        6.316175             2002
```
